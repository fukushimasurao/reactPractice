{"version":3,"sources":["components/Booklist.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Booklist","props","useState","bookData","setBookData","useEffect","getData","language","then","response","class","scope","data","items","map","books","index","volumeInfo","title","authors","publishedDate","imageLinks","smallThumbnail","src","alt","getDataFromAPI","keyword","a","axios","get","result","App","languages","to","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iMA6CeA,EA3CE,SAAAC,GAAU,IAAD,EACUC,mBAAS,MADnB,mBACfC,EADe,KACLC,EADK,KAQtB,OALAC,qBAAU,WAAO,IAAD,EACA,UAAGJ,EACVK,eADO,OAAG,OAAAL,EACAA,EAAMM,UAChBC,MAAK,SAACC,GAAD,OAAcL,EAAYK,QACrC,CAACR,IAEA,8BACI,wBAAOS,MAAM,QAAb,UACI,gCACI,+BACI,oBAAIC,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,sCACA,oBAAIA,MAAM,MAAV,+BAGR,gCAEqB,OAAbR,EACI,+CAEAA,EAASS,KAAKC,MAAMC,KAAI,SAACC,EAAOC,GAAR,OACpB,+BACI,6BAAKA,EAAQ,IACb,6BAAKD,EAAME,WAAWC,QACtB,6BAAKH,EAAME,WAAWE,UACtB,6BAAKJ,EAAME,WAAWG,gBACtB,6BAAKL,EAAME,WAAWI,WAAWC,eAAiB,qBAAKC,IAAKR,EAAME,WAAWI,WAAWC,eAAgBE,IAAI,KAAQ,cAL/GR,c,gCCvBnCS,EAAc,uCAAG,WAAMC,GAAN,eAAAC,EAAA,4DACA,yDADA,SAEEC,IAAMC,IAAN,UADF,0DACE,OAA0BH,IAF5B,cAEbI,EAFa,yBAGZA,GAHY,2CAAH,sDAoDLC,EA9CH,WACR,IAAMC,EAAY,CAAC,QAAS,MAAO,WACnC,OACI,cAAC,IAAD,UACI,gCACI,2CACA,+BACI,6BAAI,cAAC,IAAD,CAAMC,GAAG,IAAT,qBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,OAAT,mBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,WAAT,0BAER,cAAC,IAAD,CACIC,OAAK,EACLC,KAAK,IACLC,OACI,SAAAnC,GAAK,OAAI,cAAC,EAAD,CACLM,SAAUyB,EAAU,GACpB1B,QAAS,SAAAoB,GAAO,OAAID,EAAeC,SAI/C,cAAC,IAAD,CACIS,KAAK,OACLC,OACI,SAAAnC,GAAK,OACD,cAAC,EAAD,CACIM,SAAUyB,EAAU,GACpB1B,QAAS,SAAAoB,GAAO,OAAID,EAAeC,SAInD,cAAC,IAAD,CACIS,KAAK,WACLC,OACI,SAAAnC,GAAK,OACD,cAAC,EAAD,CACIM,SAAUyB,EAAU,GACpB1B,QAAS,SAAAoB,GAAO,OAAID,EAAeC,eCpCpDW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.39c7e3c6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Booklist = props => {\n    const [bookData, setBookData] = useState(null);\n\n    useEffect(() => {\n        const result = props\n            .getData?.(props.language)\n            .then((response) => setBookData(response));\n    }, [props]);\n    return (\n        <div>\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">No.</th>\n                        <th scope=\"col\">署名</th>\n                        <th scope=\"col\">著者</th>\n                        <th scope=\"col\">出版年月</th>\n                        <th scope=\"col\">画像</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        bookData === null ? (\n                            <p>now loading...</p>\n                        ) : (\n                            bookData.data.items.map((books, index) => (\n                                <tr key={index}>\n                                    <th>{index + 1}</th>\n                                    <td>{books.volumeInfo.title}</td>\n                                    <td>{books.volumeInfo.authors}</td>\n                                    <td>{books.volumeInfo.publishedDate}</td>\n                                    <td>{books.volumeInfo.imageLinks.smallThumbnail ? <img src={books.volumeInfo.imageLinks.smallThumbnail} alt=\"\" /> : 'NoImage'}</td>\n                                </tr>\n                            ))\n                        )\n                    }\n\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Booklist;\n","import React from 'react';\nimport Booklist from './components/Booklist';\nimport axios from 'axios';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nconst getDataFromAPI = async keyword => {\n    const requestUrl = 'https://www.googleapis.com/books/v1/volumes?q=intitle:';\n    const result = await axios.get(`${requestUrl}${keyword}`);\n    return result;\n}\n\nconst App = () => {\n    const languages = ['React', 'Vue', 'Angular'];\n    return (\n        <BrowserRouter>\n            <div>\n                <h1>react app</h1>\n                <ul>\n                    <li><Link to='/'>React</Link></li>\n                    <li><Link to='/vue'>vue</Link></li>\n                    <li><Link to='/angular'>Angular</Link></li>\n                </ul>\n                <Route\n                    exact\n                    path='/'\n                    render={\n                        props => <Booklist\n                            language={languages[0]}\n                            getData={keyword => getDataFromAPI(keyword)}\n                        />\n                    }\n                />\n                <Route\n                    path='/vue'\n                    render={\n                        props =>\n                            <Booklist\n                                language={languages[1]}\n                                getData={keyword => getDataFromAPI(keyword)}\n                            />\n                    }\n                />\n                <Route\n                    path='/angular'\n                    render={\n                        props =>\n                            <Booklist\n                                language={languages[2]}\n                                getData={keyword => getDataFromAPI(keyword)}\n                            />\n                    }\n                />\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}